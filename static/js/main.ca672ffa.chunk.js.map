{"version":3,"sources":["components/AppBar.tsx","components/picture-slider/PictureSelector.tsx","components/picture-slider/config.ts","components/picture-slider/PictureSlider.tsx","views/UnderConstruction.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","createStyles","selector","display","flexDirection","circle","backgroundColor","palette","primary","light","borderRadius","cursor","lineHeight","size","height","width","textAlign","fontSize","typography","caption","margin","marginLeft","circleSelected","main","PictureSelector","props","React","useState","value","setValue","buttonLabels","i","length","push","map","label","key","clsx","onClick","val","onSelect","image1","image2","pictureSlider","maxWidth","paper","padding","paddingBottom","ratio","paddingTop","overflow","imagesWrapper","top","image","maxHeight","backgroundSize","backgroundRepeat","imageFloater","float","backgroundPosition","borderBottomWidth","borderBottomStyle","borderBottomColor","imageCropper","sliderThumb","visibility","borderWidth","borderStyle","borderColor","alignItems","sliderThumbArrowLeft","sliderThumbIcons","sliderThumbCircle","marginTop","CustomSlider","withStyles","thumb","rail","bottom","track","Slider","CustomSliderThumb","style","PictureSlider","selected","setSelected","Paper","backgroundImage","config","onChange","event","newValue","aria-labelledby","ThumbComponent","iframe","text","secondary","link","UnderConstruction","Grid","justify","container","item","xs","src","frameBorder","Link","href","background","App","path","Boolean","window","location","hostname","match","createMuiTheme","default","type","blue","red","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca672ffa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Wurstgulasch\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst size = 25;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    selector: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n    circle: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      borderRadius: '50%',\r\n      cursor: 'pointer',\r\n      lineHeight: `${size - 1}px`,\r\n      height: size,\r\n      width: size,\r\n      textAlign: 'center',\r\n      fontSize: theme.typography.caption.fontSize,\r\n      margin: theme.spacing(1),\r\n      marginLeft: theme.spacing(0),\r\n    },\r\n    circleSelected: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    }\r\n  }),\r\n);\r\n\r\nconst PictureSelector = (props: {\r\n  length: number,\r\n  onSelect?: (value: number) => void;\r\n\r\n}) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState<number>(0);\r\n\r\n  const handleChange = (val: number) => {\r\n    setValue(val)\r\n    if (props.onSelect) {\r\n      props.onSelect(val);\r\n    }\r\n  };\r\n\r\n  const buttonLabels = []\r\n  for (let i: number = 0; i < props.length; i++) {\r\n    buttonLabels.push(i + 1);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.selector}>\r\n      {buttonLabels.map((label, i) =>\r\n        <div key={`selector-button-${i}`}\r\n          className={clsx(classes.circle, { [classes.circleSelected]: i === value })}\r\n          onClick={() => handleChange(i)}>\r\n          {label}\r\n        </div>)}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default PictureSelector;\r\n","export default [\r\n    {\r\n        image1: './assets/old_1.jpg',\r\n        image2: './assets/new_1.jpg'\r\n    },\r\n    {\r\n        image1: './assets/old_2.jpg',\r\n        image2: './assets/new_2.jpg'\r\n    },\r\n    {\r\n        image1: './assets/old_3.jpg',\r\n        image2: './assets/new_3.jpg'\r\n    },\r\n    {\r\n        image1: './assets/old_4.jpg',\r\n        image2: './assets/new_4.jpg'\r\n    }\r\n]","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport { Theme, createStyles, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport PictureSelector from './PictureSelector';\r\n\r\nimport config from './config';\r\n\r\nconst maxWidth = 500;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    pictureSlider: {\r\n      display: 'flex',\r\n      maxWidth: '100%',\r\n      flexDirection: 'column',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(16),\r\n        height: theme.spacing(16),\r\n      },\r\n    },\r\n    circle: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      width: 40,\r\n      height: 40,\r\n      borderRadius: '50%',\r\n    },\r\n    paper: {\r\n      width: `calc(100% - ${theme.spacing(2) * 2}px)`,\r\n      height: 'auto',\r\n      margin: 'auto',\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n      maxWidth: `${maxWidth}px`,\r\n    },\r\n    ratio: {\r\n      position: 'relative',\r\n      paddingTop: '75%',\r\n      height: 0,\r\n      overflow: 'hidden',\r\n    },\r\n    imagesWrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      position: 'absolute',\r\n      top: 0,\r\n      height: '100%',\r\n      width: '100%',\r\n    },\r\n    image: {\r\n      maxWidth: `${maxWidth}px`,\r\n      maxHeight: '100%',\r\n      height: '100%',\r\n      width: '100%',\r\n      backgroundSize: 'auto 100%',\r\n      backgroundRepeat: 'no-repeat',\r\n    },\r\n    imageFloater: {\r\n      float: 'right',\r\n      backgroundPosition: 'right',\r\n      borderBottomWidth: 3,\r\n      borderBottomStyle: 'solid',\r\n      borderBottomColor: '#ffffff88',\r\n    },\r\n    imageCropper: {\r\n      maxWidth: `${maxWidth / 2}px`,\r\n      overflow: 'hidden'\r\n    },\r\n    sliderThumb: {\r\n      visibility: 'visible',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      borderWidth: 1,\r\n      borderStyle: 'solid',\r\n      borderColor: theme.palette.primary.main,\r\n      backgroundColor: '#ffffff99',\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: '50%',\r\n      alignItems: 'center'\r\n    },\r\n    sliderThumbArrowLeft: {\r\n      marginLeft: -4,\r\n    },\r\n    sliderThumbIcons: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    sliderThumbCircle: {\r\n      marginTop: -6,\r\n      marginLeft: 14\r\n    }\r\n  }),\r\n);\r\n\r\nconst CustomSlider = withStyles({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    padding: 0,\r\n  },\r\n  thumb: {\r\n    visibility: 'hidden',\r\n    top: '50%',\r\n  },\r\n  rail: {\r\n    bottom: 0, \r\n  },\r\n  track: {\r\n    bottom: 0,\r\n  }\r\n})(Slider)\r\n\r\nfunction CustomSliderThumb(props: any) {\r\n  const classes = useStyles();\r\n  return (\r\n    <span {...props}>\r\n      <span className={classes.sliderThumb}>\r\n        <span className={clsx(props.className, classes.sliderThumbCircle)} style={{visibility: 'visible'}} />\r\n        <ArrowLeft className={clsx(classes.sliderThumbIcons, classes.sliderThumbArrowLeft)} />\r\n        <ArrowRight className={classes.sliderThumbIcons} />\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst PictureSlider = (props: RouteComponentProps) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState<number>(50);\r\n  const [selected, setSelected] = useState<number>(0);\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number);\r\n  };\r\n\r\n  const handleSelect = (val: number) => {\r\n    setSelected(val);\r\n    setValue(50);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.pictureSlider}>\r\n      <Paper className={classes.paper}>\r\n        <div className={classes.ratio}>\r\n          <div className={classes.imagesWrapper}>\r\n            <div\r\n              className={classes.image}\r\n              style={{\r\n                maxWidth: `${value}%`,\r\n                backgroundImage: `url('${config[selected].image1}')`\r\n              }}\r\n            />\r\n            <div\r\n              className={clsx(classes.image, classes.imageFloater)}\r\n              style={{\r\n                maxWidth: `${100 - value}%`,\r\n                backgroundImage: `url('${config[selected].image2}')`\r\n              }}\r\n            />\r\n            <CustomSlider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" ThumbComponent={CustomSliderThumb} track='inverted' />\r\n          </div>\r\n        </div>\r\n        <PictureSelector length={config.length} onSelect={handleSelect} />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PictureSlider;\r\n","import React from 'react';\r\nimport { RouteComponentProps } from '@reach/router';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 900,\r\n      margin: 'auto'\r\n    },\r\n    iframe: {\r\n      padding: theme.spacing(2),\r\n      width: `calc(100% - ${theme.spacing(2) * 2}px)`\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n\r\n    }\r\n  }),\r\n);\r\n\r\nconst UnderConstruction = (props: RouteComponentProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid justify={'center'} container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>This site is under construction</Paper>\r\n        </Grid>\r\n\r\n        <iframe\r\n          title='under construction'\r\n          src=\"https://giphy.com/embed/tAeB6dptxnoli\"\r\n          width=\"100%\"\r\n          height=\"446\"\r\n          frameBorder=\"0\"\r\n          className={classes.iframe}>\r\n        </iframe>\r\n        <Link href=\"https://giphy.com/gifs/construction-tAeB6dptxnoli\">via GIPHY</Link >\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnderConstruction;\r\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport AppBar from './components/AppBar';\n// import NavigationDrawer from './components/NavigationDrawer';\nimport Terasse from './components/picture-slider/PictureSlider';\nimport Construction from './views/UnderConstruction';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: '100vh',\n      background: '#333',\n    }\n  }),\n);\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar />\n      {/* <NavigationDrawer></NavigationDrawer> */}\n      <br />\n      <Router>\n        <Switch>\n          <Route path=\"/terrasse\">\n            <Terasse />\n          </Route>\n          <Route path=\"/\">\n            <Construction />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { blue, red } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        background: { default: 'black' },\r\n        type: 'dark',\r\n        primary: {\r\n            // Purple and green play nicely together.\r\n            light: blue[400],\r\n            main: blue[900],\r\n\r\n        },\r\n        secondary: {\r\n            // This is green.A700 as hex.\r\n            main: red[500],\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}